/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2018-09-20 02:48:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sys.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title></title>\r\n");
      out.write("\t\t<link href=\"../../css/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t.container{\r\n");
      out.write("\t\t\t\tborder: 2px solid gray;\r\n");
      out.write("\t\t\t\tborder-radius: 10px;\r\n");
      out.write("\t\t\t\tpadding: 70px;\r\n");
      out.write("\t\t\t\twidth: 500px;\r\n");
      out.write("\t\t\t\tmargin: 150px auto;\r\n");
      out.write("\t\t\t\tbackground: #ffe00017;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<form class=\"form-horizontal\" role=\"form\">\r\n");
      out.write("\t   \t\t\t<div class=\"form-group\">\r\n");
      out.write("\t      \t\t\t<label for=\"name\" class=\"col-sm-2 control-label\">昵称</label>\r\n");
      out.write("\t     \t\t\t <div class=\"col-sm-10\">\r\n");
      out.write("\t         \t\t\t<input id=\"name\" type=\"text\" class=\"form-control\"\r\n");
      out.write("\t            \t\t\tplaceholder=\"请输入昵称\">\r\n");
      out.write("\t      \t\t\t</div>\r\n");
      out.write("\t   \t\t\t</div>\r\n");
      out.write("\t   \t\t\t<div class=\"form-group\">\r\n");
      out.write("\t      \t\t\t<label for=\"password\" class=\"col-sm-2 control-label\">密码</label>\r\n");
      out.write("\t     \t\t\t <div class=\"col-sm-10\">\r\n");
      out.write("\t     \t\t\t    <input id=\"password\" type=\"text\" class=\"form-control\"\r\n");
      out.write("\t     \t\t\t       placeholder=\"请输入密码\">\r\n");
      out.write("\t     \t\t\t </div>\r\n");
      out.write("\t   \t\t\t</div>\r\n");
      out.write("\t   \t\t\t<div class=\"form-group\">\r\n");
      out.write("\t      \t\t\t<label for=\"email\" class=\"col-sm-2 control-label\">email</label>\r\n");
      out.write("\t     \t\t\t <div class=\"col-sm-10\">\r\n");
      out.write("\t     \t\t\t    <input id=\"email\" type=\"text\" class=\"form-control\"\r\n");
      out.write("\t     \t\t\t       placeholder=\"请输入邮箱\">\r\n");
      out.write("\t     \t\t\t </div>\r\n");
      out.write("\t   \t\t\t</div>\r\n");
      out.write("\t   \t\t\t<div class=\"form-group\">\r\n");
      out.write("\t      \t\t\t<div class=\"col-sm-offset-2 col-sm-10\">\r\n");
      out.write("\t       \t\t\t  <button type=\"button\" onclick=\"submitMessage()\" class=\"btn btn-default\">确定</button>\r\n");
      out.write("\t      \t\t\t</div>\r\n");
      out.write("\t   \t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction submitMessage(){\r\n");
      out.write("\t\tvar name = document.getElementById(\"name\").value;\r\n");
      out.write("\t\tvar password = document.getElementById(\"password\").value;\r\n");
      out.write("\t\tvar email = document.getElementById(\"email\").value;\r\n");
      out.write("\t\tvar post;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(name){\r\n");
      out.write("\t\t\tpost = \"name=\" + name;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(password){\r\n");
      out.write("\t\t\tif(post){\r\n");
      out.write("\t\t\t\tpost += \"&\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tpost = post + \"password=\" + password;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!post){\r\n");
      out.write("\t\t\talert(\"没有信息可提交\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tvar xhr = new XMLHttpRequest();\r\n");
      out.write("\t\t\t//url = \"UserServlet\";\r\n");
      out.write("\t\t\txhr.open(\"POST\", \"../../UserEditServlet\", true);\r\n");
      out.write("\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\t\txhr.send(\"flag=edit&name=\" + name + \"&password=\" + password + \"&email=\" + email);\r\n");
      out.write("\t\t\txhr.onreadystatechange = function(){\r\n");
      out.write("\t\t\t\tif(xhr.readyState == 4 && xhr.status == 200){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar content = xhr.responseText;\r\n");
      out.write("\t\t\t\t\tif(content){\r\n");
      out.write("\t\t\t\t\t\twindow.parent.reflushUserMessage(content);\r\n");
      out.write("\t\t\t\t\t\talert(\"信息修改成功\");\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"信息修改失败\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
